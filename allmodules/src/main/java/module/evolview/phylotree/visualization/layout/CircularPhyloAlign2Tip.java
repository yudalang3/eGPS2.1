package module.evolview.phylotree.visualization.layout;import java.awt.BasicStroke;import java.awt.Graphics2D;import java.awt.geom.Line2D;import module.evolview.gfamily.work.gui.DrawUtil;import module.evolview.gfamily.work.gui.tree.PhylogeneticTreePanel;import module.evolview.model.tree.GraphicsNode;import module.evolview.model.tree.TreeLayoutProperties;import graphic.engine.guicalculator.GuiCalculator;public class CircularPhyloAlign2Tip extends CircularPhylo {	private Line2D.Double lineDrawUtil = new Line2D.Double();	final BasicStroke basicStroke;	public CircularPhyloAlign2Tip(TreeLayoutProperties controller, GraphicsNode rootNode,			PhylogeneticTreePanel phylogeneticTreePanel) {		super(controller, rootNode, phylogeneticTreePanel);		basicStroke = DrawUtil.getLineStroke(1);	}	@Override	public void calculateForPainting(int width, int height) {		super.calculateForPainting(width, height);		this.scaleBarProperty.setIfDrawScaleBar(true);	}		@Override	protected void specificTreeDrawingProcess(Graphics2D g2d) {		drawBranchLengthReferenceAxis(g2d);//		recursiveDraw(g2d, rootNode);	}		@Override	protected void leafLineDrawingProcess(Graphics2D g2d, GraphicsNode node) {		drawEachLine(g2d, node);		double radicusIfNeeded = node.getRadicusIfNeeded();		java.awt.geom.Point2D.Double tt = null;		if (radicusIfNeeded < biggestCircleRadicus) {			tt = GuiCalculator.calculateCircularLocation(node.getAngleIfNeeded(), biggestCircleRadicus, centerX,					centerY);			lineDrawUtil.setLine(tt.getX(), tt.getY(), node.getXSelf(), node.getYSelf());			g2d.setStroke(basicStroke);			g2d.draw(lineDrawUtil);		} else {			tt = new java.awt.geom.Point2D.Double(node.getXSelf(), node.getYSelf());		}			}//	private void recursiveDraw(Graphics2D g2D, GraphicsNode node) {//		NodeType nodeType = TreeDecideUtil.decideNodeType(node, rootNode);//		switch (nodeType) {//		case LEAF:////			if (!node.hideNode()) {//				drawEachLine(g2D, node);////				double radicusIfNeeded = node.getRadicusIfNeeded();//				java.awt.geom.Point2D.Double tt = null;//				if (radicusIfNeeded < biggestCircleRadicus) {//					tt = GuiCalculator.calculateCircularLocation(node.getAngleIfNeeded(), biggestCircleRadicus, centerX,//							centerY);////					lineDrawUtil.setLine(tt.getX(), tt.getY(), node.getXSelf(), node.getYSelf());//					g2D.setStroke(basicStroke);//					g2D.draw(lineDrawUtil);//				} else {//					tt = new java.awt.geom.Point2D.Double(node.getXSelf(), node.getYSelf());//				}//				drawEachLeafNameGraphicsIfNeeded(g2D, node, tt.getX(), tt.getY());//			}//			break;//		default://			for (int i = 0; i < node.getChildCount(); i++) {//				recursiveDraw(g2D, (GraphicsNode) node.getChildAt(i));//			}////			if (nodeType == NodeType.ROOT) {//				DrawUtil.drawRootTip(g2D, node, treeLayoutProperties);//			} else {//				if (!node.hideNode()) {//					drawEachLine(g2D, node);//				}//			}//			break;//		}//	}}