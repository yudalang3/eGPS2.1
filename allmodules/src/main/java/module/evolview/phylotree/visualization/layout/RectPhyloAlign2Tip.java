package module.evolview.phylotree.visualization.layout;import java.awt.BasicStroke;import java.awt.Graphics2D;import java.util.List;import module.evolview.gfamily.work.gui.DrawUtil;import module.evolview.gfamily.work.gui.tree.PhylogeneticTreePanel;import module.evolview.gfamily.work.gui.tree.TreeOperationUtil;import module.evolview.gfamily.work.model.tree.GraphicsNode;import module.evolview.gfamily.work.model.tree.TreeLayoutProperties;public class RectPhyloAlign2Tip extends RectPhyloLayout {	private double rightMostXLocation;	final BasicStroke basicStroke;	public RectPhyloAlign2Tip(TreeLayoutProperties controller, GraphicsNode rootNode,			PhylogeneticTreePanel phylogeneticTreePanel) {		super(controller, rootNode, phylogeneticTreePanel);		basicStroke = DrawUtil.getLineStroke(1);	}	@Override	protected void specificTreeDrawingProcess(Graphics2D g2d) {		rightMostXLocation = currentWidth - blankArea.getRight();		drawButtomAxis(g2d);		g2d.setStroke(basicStroke);		TreeOperationUtil.recursiveIterateTreeIF(rootNode, node -> {			if (node.getChildCount() == 0) {				double xx = node.getXSelf();				double ySelf = node.getYSelf();				if (xx < rightMostXLocation) {					// System.out.println(xx+"\t"+rightMostXLocation);					g2d.setColor(node.getDrawUnit().getLineColor());					g2d.drawLine((int) xx, (int) ySelf, (int) rightMostXLocation, (int) ySelf);				}			}		});	}	@Override	protected void leafLineDrawingProcess(Graphics2D g2d, GraphicsNode node) {		drawEachLines(g2d, node);			}	@Override	protected double getRightMostXLocation(List<GraphicsNode> leaves) {		double ret = currentWidth - blankArea.getRight();		if (treeLayoutProperties.getShowLeafPropertiesInfo().isShowLeafLabel()) {			ret += getMaxLengthLeafNameWidthAccording2CurrentFont();		} else {			ret += 15;		}		return ret;	}	@Override	protected double getRightMostXLocation4node2leafAnno(List<GraphicsNode> t) {		return currentWidth - blankArea.getRight();	}}